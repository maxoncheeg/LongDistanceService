@using LongDistanceService.Web.Routes
@using LongDistanceService.Web.Services.Abstract
@attribute [Route(ServiceRoutes.Identity.RefreshToken)]

<h3>Trying to refresh your token...</h3>

@code {
    [SupplyParameterFromQuery] public string? ReturnUrl { get; set; }
    [Inject] public NavigationManager Navigation { get; set; } = null!;
    [Inject] public IIdentityService IdentityService { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        // todo: если дурачьомба сам перейдет сюда, надо запретить рефрешать... наверное
        var token = await IdentityService.ExtractTokenAsync();
        var refreshToken = IdentityService.ExtractRefreshToken();
        if (refreshToken != null && token != null)
        {
            var result = await IdentityService.RefreshSignInAsync(refreshToken, token);
            
            if(result)
                Navigation.NavigateTo(ReturnUrl ?? ServiceRoutes.Home);
        }

        await IdentityService.SignOutAsync();
        string route = ServiceRoutes.Identity.AdminLogin + (string.IsNullOrWhiteSpace(ReturnUrl) ? "" : "?returnUrl=" + ReturnUrl);
        Navigation.NavigateTo(route);
    }

}