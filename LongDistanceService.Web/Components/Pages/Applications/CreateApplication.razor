@using LongDistanceService.Web.Routes
@using LongDistanceService.Web.Models.Applications
@using LongDistanceService.Web.Services.Abstract
@using LongDistanceService.Domain.Services.Abstract
@using LongDistanceService.Web.Models.Scenario.Abstract
@attribute [Route(ServiceRoutes.Application.Create)]

<div style="text-align: center; padding: 20px 40px;">
    <h3>Создание заявки</h3>

    <EditForm class="login-form" Model="Model" method="post" OnValidSubmit="Create" FormName="createApplication">
        <DataAnnotationsValidator/>
        <ValidationSummary class="text-danger" role="alert"/>
        <div>
            <h4 class="c-dg">Введите первое сообщение</h4>
        </div>
        <div class="form-floating mb-3">
            <InputTextArea @bind-Value="Model.Text" class="form-control" rows="10"/>
            <label for="text" class="form-label">Опишите свой заказ. Расстояния, точки прибытия и отбытия. Все сюда!</label>
            <ValidationMessage For="() => Model.Text" class="text-danger"/>
        </div>
        <div>
            <button type="submit" class="w-100 btn btn-dark btn-lg">СОЗДАТЬ</button>
        </div>
    </EditForm>
</div>

@code {
    [SupplyParameterFromForm] public ApplicationModel Model { get; set; } = new();

    [Inject] public IScenarioService ScenarioService { get; set; } = null!;
    [Inject] public ISecurityService SecurityService { get; set; } = null!;
    [Inject] public NavigationManager NavigationManager { get; set; } = null!;
    [Inject] public IApplicationService ApplicationService { get; set; } = null!;

    public IAuthResult? AuthResult { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        AuthResult = await ScenarioService.TryAuthenticateUserAsync(ServiceRoutes.Application.Create, redirectToLogin: true);
        if (AuthResult != null)
        {
            if (await SecurityService.IsAdminAsync())
                NavigationManager.NavigateTo(ServiceRoutes.Home);

            return;
        }

        await base.OnInitializedAsync();
    }

    public async Task Create()
    {
        if (AuthResult != null)
        {
            await ApplicationService.CreateApplicationAsync(AuthResult.User.Id, Model.Text);
            NavigationManager.NavigateTo(ServiceRoutes.Application.List);
        }
    }

}