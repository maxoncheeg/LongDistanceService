@using LongDistanceService.Web.Routes
@using LongDistanceService.Domain.Enums
@using LongDistanceService.Domain.Models.Abstract
@using LongDistanceService.Domain.Services.Abstract
@using LongDistanceService.Web.Services.Abstract

@attribute [Route(ServiceRoutes.Application.List)]


<div style="text-align: center; padding: 20px 40px;">
    @if (!IsAdmin)
    {
        <h2>Заявки</h2>
        <div style="text-align: left">
            <a class="btn btn-info btn-lg m-5" href="@ServiceRoutes.Application.Create">Создать заявку</a>
            <h3>В процессе</h3>
            <div style="display:flex; flex-direction: row;">
                @foreach (var application in Applications.Where(a => a.Status != ApplicationState.Finished))
                {
                    <div class="card" style="width: 18rem; margin: 10px">
                        <div class="card-header bg-w">
                            <h4 class="card-title c-dg" style="text-align: right; font-size: 24pt;">№@application.Id</h4>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title fs-4">
                                <span class="c-g fs-5">Дата создания:</span>
                                <br>@application.Created.ToShortDateString()
                            </h5>
                            <h5 class="card-title fs-4">
                                <span class="c-g fs-5">Последнее сообщение:</span>
                                <br>@application.LastMessageDate
                            </h5>
                        </div>
                        <div class="card-body">
                            <a href="@(ServiceRoutes.Application.Route + '/' + application.Id)" class="btn btn-dark">Открыть чат</a>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div style="text-align: left; margin-top: 10px;">
            <h3>Завершенные</h3>

            <div style="display:flex; flex-direction: row;">
                @foreach (var application in Applications.Where(a => a.Status == ApplicationState.Finished))
                {
                    <div class="card" style="width: 18rem; margin: 10px">
                        <div class="card-header bg-w">
                            <h4 class="card-title c-dg" style="text-align: right; font-size: 24pt;">№@application.Id</h4>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title fs-4">
                                <span class="c-g fs-5">Дата создания:</span>
                                <br>@application.Created.ToShortDateString()
                            </h5>
                            <h5 class="card-title fs-4">
                                <span class="c-g fs-5">Последнее сообщение:</span>
                                <br>@application.LastMessageDate
                            </h5>
                        </div>
                        <div class="card-body">
                            <a href="@(ServiceRoutes.Application.Route + '/' + application.Id)" class="btn btn-dark">Открыть чат</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    
    @if (IsAdmin)
    {
        <h2>Вы админ, и для вас эта страница еще не готова!</h2>
    }
</div>


@code {
    [Inject] public IApplicationService ApplicationService { get; set; } = null!;
    [Inject] public IScenarioService ScenarioService { get; set; } = null!;
    [Inject] public ISecurityService SecurityService { get; set; } = null!;

    public IList<IApplicationInfo> Applications { get; set; } = [];
    public bool IsAdmin { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var result = await ScenarioService.TryAuthenticateUserAsync(ServiceRoutes.Application.List, redirectToLogin: true);
        if (result != null)
        {
            IsAdmin = await SecurityService.IsAdminAsync();
            Applications = await ApplicationService.GetApplicationInfoAsync(result.User.Id);
        }

        await base.OnInitializedAsync();
    }

}