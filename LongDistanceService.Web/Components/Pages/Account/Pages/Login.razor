@page "/identity/login"
@using LongDistanceService.Web.Models.Identity
@using LongDistanceService.Shared.Services.Identity

@inject NavigationManager NavigationManager
@inject IAuthenticationService AuthenticationService
@inject IJSRuntime JsRuntime

<PageTitle>Login</PageTitle>

<h1>Amerika</h1>

<EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                <DataAnnotationsValidator/>
                <h2>Use a local account to log in.</h2>
                <hr/>
                <ValidationSummary class="text-danger" role="alert"/>
                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com"/>
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger"/>
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password"/>
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => Input.Password" class="text-danger"/>
                </div>
                @* <div class="checkbox mb-3"> *@
                @*     <label class="form-label"> *@
                @*         <InputCheckbox @bind-Value="Input.RememberMe" class="darker-border-checkbox form-check-input"/> *@
                @*         Remember me *@
                @*     </label> *@
                @* </div> *@
                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    @* <p> *@
                    @*     <a href="Account/ForgotPassword">Forgot your password?</a> *@
                    @* </p> *@
                    <p>
                        <a href="@(NavigationManager.GetUriWithQueryParameters("identity/register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Register as a new user</a>
                    </p>
                    @* <p> *@
                    @*     <a href="Account/ResendEmailConfirmation">Resend email confirmation</a> *@
                    @* </p> *@
                </div>
            </EditForm>

@code {
    [SupplyParameterFromQuery] public string? ReturnUrl { get; set; }
    [SupplyParameterFromForm] public LoginModel Input { get; set; } = new();

    public async Task LoginUser()
    {
        var user = new ApplicationIdentityUser() { Email = Input.Email, Password = Input.Password };
        var result = await AuthenticationService.AuthenticateUser(user);
        
        if(result) NavigationManager.NavigateTo(ReturnUrl);
    }

}