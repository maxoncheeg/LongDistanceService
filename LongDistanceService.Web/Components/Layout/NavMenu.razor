@using LongDistanceService.Web.Services.Abstract
@using IAuthorizationService = LongDistanceService.Web.Services.Abstract.IIdentityService
@using LongDistanceService.Web.Routes
@using MediatR
@using LongDistanceService.Domain.Services.Abstract
@using LongDistanceService.Web.Models.Scenario.Abstract

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" style="font-size: 12pt;" href="@ServiceRoutes.Home">Грузовые автоперевозки</a>
    </div>
</div>


<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

@* onclick="document.querySelector('.navbar-toggler').click()" *@

<div class="nav-scrollable" style="overflow-y: visible !important;">
    <nav class="flex-column">
        @if (AuthResult != null)
        {
            <div class="nav-item px-3">
                @if (IsAdmin)
                {
                    <div class="c-w">Хорошей работы, @AuthResult.User.Login &#128666;</div>
                }
                else
                {
                    <div class="c-w">Здравствуйте, @AuthResult.User.Login</div>
                }
            </div>
        }
    </nav>
</div>


@code{
    [Inject] public IAuthorizationService IdentityService { get; set; } = null!;
    [Inject] public ISecurityService SecurityService { get; set; } = null!;
    [Inject] public IScenarioService ScenarioService { get; set; } = null!;
    [Inject] public IMediator Mediator { get; set; } = null!;

    public string Menu { get; set; } = string.Empty;

    public bool IsAdmin { get; set; } = false;
    public IAuthResult? AuthResult { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        AuthResult = await ScenarioService.TryAuthenticateUserAsync(tryRefreshToken: false);

        if (AuthResult != null)
        {
            IsAdmin = await SecurityService.IsAdminAsync();
            if (IsAdmin)
            {

            }
        }

        StateHasChanged();
    }

}