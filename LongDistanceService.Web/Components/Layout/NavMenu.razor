@using LongDistanceService.Web.Services.Abstract
@using Microsoft.AspNetCore.Authentication.JwtBearer
@using Microsoft.AspNetCore.Authorization
@using IAuthorizationService = LongDistanceService.Web.Services.Abstract.IIdentityService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">LongDistanceService.Web</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>


        @if (IsAdmin)
        {
            <p style="color: aliceblue; font-size: 20px; text-indent: 5px;">АДМИН ИНФА!</p>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>
    </nav>
</div>

@code{
    [Inject] public IAuthorizationService IdentityService { get; set; } = null!;
    [Inject] public ISecurityService SecurityService { get; set; } = null!;
    [Inject] public AuthenticationStateProvider StateProvider { get; set; } = null!;
    [Inject] public NavigationManager NavigationManager { get; set; } = null!;
    public bool IsAdmin { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        try
        {
            var token = await IdentityService.ExtractTokenAsync();

            if (token != null)
            {
                var user = await SecurityService.ValidateTokenAsync(token);
                if (user != null)
                    IsAdmin = await SecurityService.IsAdminAsync(user);
                else
                {
                   // NavigationManager.NavigateTo("/refresh");
                }
            }
        }
        catch
        {
        }
    }

}